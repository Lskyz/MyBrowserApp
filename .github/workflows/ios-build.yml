
    name: iOS Build (No Signing with Xcodeproj - Path Override)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Check Project Files
        run: |
          echo "Directory contents:"
          ls -la
          if [ ! -d MyBrowserapp.xcodeproj ]; then echo "MyBrowserapp.xcodeproj not found!"; exit 1; fi
          if [ ! -d MyBrowserApp ]; then echo "MyBrowserApp directory not found!"; exit 1; fi
          if [ ! -f MyBrowserApp/ContentView.swift ] || [ ! -f MyBrowserApp/CustomWebView.swift ] || [ ! -f MyBrowserApp/WebViewStateModel.swift ] || [ ! -f MyBrowserApp/MyBrowserAppApp.swift ]; then
            echo "Required source files not found in MyBrowserApp/!";
            ls -la MyBrowserApp/;
            exit 1;
          fi
          if [ ! -d mybrowserapp ]; then echo "mybrowserapp directory not found!"; exit 1; fi
          if [ ! -f mybrowserapp/info.plist ]; then
            echo "info.plist not found in mybrowserapp/!";
            ls -la mybrowserapp/;
            exit 1;
          fi

      - name: Check exportOptions.plist
        run: |
          if [ ! -f exportOptions.plist ]; then echo "exportOptions.plist not found in root!"; exit 1; fi
          echo "exportOptions.plist location: $(pwd)/exportOptions.plist"

      - name: List Project Details
        run: |
          xcodebuild -list -project MyBrowserapp.xcodeproj
          echo "Build settings:"
          xcodebuild -showBuildSettings -project MyBrowserapp.xcodeproj

      - name: Extract and Set Scheme
        id: set_scheme
        run: |
          PROJECT_NAME=$(basename MyBrowserapp.xcodeproj .xcodeproj)
          echo "Detected project name: $PROJECT_NAME"
          SCHEME=$(xcodebuild -list -project MyBrowserapp.xcodeproj | grep 'Schemes:' -A 1 | tail -n 1 | xargs)
          if [ -z "$SCHEME" ]; then
            echo "No scheme found, exiting."
            exit 1;
          fi
          CORRECTED_SCHEME="mybrowesrapp"
          if [ "$SCHEME" != "$CORRECTED_SCHEME" ]; then
            echo "Scheme mismatch, forcing to $CORRECTED_SCHEME"
            SCHEME="$CORRECTED_SCHEME"
          fi
          echo "SCHEME=$SCHEME" >> $GITHUB_ENV
          echo "Using scheme: $SCHEME"
          TARGETS=$(xcodebuild -list -project MyBrowserapp.xcodeproj | grep 'Targets:' -A 1 | tail -n 1 | xargs)
          echo "Detected targets: $TARGETS"

      - name: Build iOS App (No Signing with Path Override)
        run: |
          cd MyBrowserApp/MyBrowserApp || exit 1
          xcodebuild -project ../MyBrowserapp.xcodeproj -scheme "${{ env.SCHEME }}" -sdk iphonesimulator -configuration Debug \
            -derivedDataPath ../build \
            INFOPLIST_FILE=../../mybrowserapp/info.plist \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            -archivePath ../build/${{ env.SCHEME }}.xcarchive \
            archive

      - name: Convert to IPA
        run: |
          cd MyBrowserApp/MyBrowserApp || exit 1
          xcodebuild -exportArchive \
            -archivePath ../build/${{ env.SCHEME }}.xcarchive \
            -exportPath ../build/${{ env.SCHEME }} \
            -exportOptionsPlist ../../exportOptions.plist \
            -allowProvisioningUpdates

      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.SCHEME }}-ipa
          path: MyBrowserApp/build/${{ env.SCHEME }}/*.ipa